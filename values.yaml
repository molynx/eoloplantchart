# Default values for eoloplanner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: cluster-ip
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  # Se configura si aplican las networkpolicies
networkPolicy:
  enabled: true

  # Se configura si debe crearse los PersistenceVolumes
persistence:
  enabled: true

  # Configuracion de la MySQL
mysql:
  port: 3306
  storageClassName: mysql
  rootPassword: password
  rootUser: root
  databaseName: eoloplantsDB
  image: mysql
  tag: 8.0.28

  # Configuracion de la Rabbitmq
rabbitmq:
  port: 5672
  consoleport: 15672
  storageClassName: rabbitmq
  defaultUser: root
  defaultPassword: password
  image: rabbitmq
  tag: 3.9-management

  # Configuracion de la mongodb
mongodb:
  port: 27017
  port2: 27018
  port3: 27019
  storageClassName: mongo
  image: mongo
  tag: 4.4.6
  databaseName: topoDB
  defaultUser: root
  defaultPassword: password

  # Configuracion del toposervice
toposervice:
  port: 8181
  nodeport: 30001
  image: codeurjc/toposervice
  tag: v1.0
  servicetype: NodePort

weatherservice:
  port: 9090
  image: codeurjc/weatherservice
  tag: v1.0

  # !!!! Cambiar a la imagen de ALEX codeurjc/planner
planner:
  image: molynx/planner
  tag: v1

server:
  port: 3000
  nodeport: 30000
  servicetype: NodePort

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
