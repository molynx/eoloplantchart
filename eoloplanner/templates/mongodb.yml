---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mongodb.name" . }}-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "mongodb.name" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "mongodb.name" . }}
    spec:
      containers:
      - name: {{ template "mongodb.name" . }}
        image: {{ .Values.mongodb.image }}:{{ .Values.mongodb.tag }}
        env:
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.mongodb.databaseName }}
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ .Values.mongodb.defaultUser }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: {{ .Values.mongodb.defaultPassword }}
        ports:
        - containerPort: {{ .Values.mongodb.port }}
        - containerPort: {{ .Values.mongodb.port2 }}
        - containerPort: {{ .Values.mongodb.port3 }}
        volumeMounts:
        - mountPath: /data/db
          name: datadb
      volumes:
      - name: datadb
        persistentVolumeClaim:
          claimName: {{ template "mongodb.name" . }}-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "mongodb.name" . }}-pvc
spec:
  {{- if .Values.persistence.enabled }}
  storageClassName: {{ template "mongodb.name" . }}
  {{- else }}
  storageClassName: {{ .Values.mongodb.storageClassName }}
  {{- end }}
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
{{- if .Values.persistence.enabled }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "mongodb.name" . }}-pv
spec:
  storageClassName: {{ template "mongodb.name" . }}
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/{{ template "mongodb.name" . }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "mongodb.name" . }}-service
  labels:
    app: {{ template "mongodb.name" . }}
spec:
  ports:
  - port: {{ .Values.mongodb.port }}
    targetPort: {{ .Values.mongodb.port }}
    protocol: TCP
    name: mongodb-port-{{ .Values.mongodb.port }}
  - port: {{ .Values.mongodb.port2 }}
    targetPort: {{ .Values.mongodb.port2 }}
    protocol: TCP
    name: mongodb-port-{{ .Values.mongodb.port2 }}
  - port: {{ .Values.mongodb.port3 }}
    targetPort: {{ .Values.mongodb.port3 }}
    protocol: TCP
    name: mongodb-port-{{ .Values.mongodb.port3 }}
  selector:
    app: {{ template "mongodb.name" . }}
  type: ClusterIP
---
{{- if .Values.networkPolicy.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ template "mongodb.name" . }}-from-topo
spec:
  podSelector:
    matchLabels:
      app: {{ template "mongodb.name" . }}
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ template "toposervice.name" . }}
    ports:
    - port: {{ .Values.mongodb.port }}
      protocol: TCP
{{- end }}
